{
  "version": 3,
  "sources": ["../src/themex.ts"],
  "sourcesContent": ["type ThemexKey = string;\ntype ThemexValue = string;\ninterface ThemexOptions {\n  key: ThemexKey;\n  default?: ThemexValue;\n  values: ThemexValue[];\n}\nclass Themex {\n  private options: ThemexOptions[];\n  constructor(options: ThemexOptions[]) {\n    this.options = options;\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => {\n        this.initializeThemex();\n        this.setupEventListeners();\n      });\n    } else {\n      this.initializeThemex();\n      this.setupEventListeners();\n    }\n  }\n  private getDefaultValue(key: ThemexKey): ThemexValue | undefined {\n    const option = this.options.find(opt => opt.key === key);\n    return option?.default;\n  }\n  private initializeThemex(): void {\n    this.options.forEach(({ key, default: defaultValue }) => {\n      const savedValue = localStorage.getItem(key);\n      console.log(savedValue)\n      const value = savedValue || defaultValue;\n      if (value) {\n        this.applyThemex(key, value);\n        this.updateUI(key, value);\n      }\n    });\n  }\n  private setupEventListeners(): void {\n    document.querySelectorAll<HTMLInputElement>('input[type=\"checkbox\"][data-themex-key][data-themex-value]').forEach(input => {\n      input.addEventListener('change', (e) => {\n        const target = e.target as HTMLInputElement;\n        const key = target.dataset.themexKey;\n        const value = target.dataset.themexValue;\n        if (key && value) {\n          if (target.checked) {\n            this.applyThemex(key, value);\n            this.updateUI(key, value);\n          } else {\n            const defaultValue = this.getDefaultValue(key);\n            if (defaultValue) {\n              this.applyThemex(key, defaultValue);\n              this.updateUI(key, defaultValue);\n            } else {\n              this.removeThemex(key);\n              this.updateUI(key, '');\n            }\n          }\n        }\n      });\n    });\n    document.querySelectorAll<HTMLLabelElement>('label[data-themex-key]').forEach(label => {\n      label.addEventListener('change', (e) => {\n        const key = label.dataset.themexKey;\n        const value = label.dataset.themexValue;\n        label.querySelectorAll<HTMLInputElement>('input[type=\"checkbox\"]').forEach(input => {\n        if (key && value) {\n          if (input.checked) {\n            this.applyThemex(key, value);\n            this.updateUI(key, value);\n          } else {\n            const defaultValue = this.getDefaultValue(key);\n            if (defaultValue) {\n              this.applyThemex(key, defaultValue);\n              this.updateUI(key, defaultValue);\n            } else {\n              this.removeThemex(key);\n              this.updateUI(key, '');\n            }\n          }\n        }\n      });\n    });\n    });\n    \n    document.querySelectorAll<HTMLSelectElement>('select[data-themex-key]').forEach(select => {\n      select.addEventListener('change', (e) => {\n        const target = e.target as HTMLSelectElement;\n        const key = target.dataset.themexKey as string;\n        const value = target.value as ThemexValue;\n        this.applyThemex(key, value);\n        this.updateUI(key, value);\n      });\n    });\n    // Handle buttons\n    document.querySelectorAll<HTMLButtonElement>('button[data-themex-key]').forEach(button => {\n      button.addEventListener('click', (e) => {\n        const target = e.currentTarget as HTMLButtonElement;\n        const key = target.dataset.themexKey as ThemexKey;\n        const value = target.dataset.themexValue;\n        if (value) {\n          this.applyThemex(key, value);\n          this.updateUI(key, value);\n        }\n      });\n    });\n    // Handle div buttons\n    document.querySelectorAll<HTMLButtonElement>('div[role=\"button\"][data-themex-key]').forEach(button => {\n      button.addEventListener('click', (e) => {\n        const target = e.currentTarget as HTMLButtonElement;\n        const key = target.dataset.themexKey as ThemexKey;\n        const value = target.dataset.themexValue;\n        if (value) {\n          this.applyThemex(key, value);\n          this.updateUI(key, value);\n        }\n      });\n    });\n    // Handle links\n    document.querySelectorAll<HTMLLinkElement>('a[data-themex-key]').forEach(link => {\n      link.addEventListener('click', (e) => {\n        const target = e.currentTarget as HTMLLinkElement;\n        const key = target.dataset.themexKey;\n        const value = target.dataset.themexValue;\n        if (key && value) {\n          this.applyThemex(key, value);\n          this.updateUI(key, value);\n        }\n      });\n    });\n    // Handle radio buttons\n    document.querySelectorAll<HTMLInputElement>('input[type=\"radio\"][data-themex-key]').forEach(radio => {\n      radio.addEventListener('change', (e) => {\n        const target = e.target as HTMLInputElement;\n        const key = target.dataset.themexKey;\n        const value = target.dataset.themexValue;\n        if (target.checked && key && value) {\n          this.applyThemex(key, value);\n          this.updateUI(key, value);\n        }\n      });\n    });\n    // Handle range inputs\n    document.querySelectorAll<HTMLInputElement>('input[type=\"range\"][data-themex-key]').forEach(range => {\n      range.addEventListener('change', (e) => {\n        const target = e.target as HTMLInputElement;\n        const key = target.dataset.themexKey;\n        if (key) {\n          const value = target.value;\n          this.applyThemex(key, value);\n          this.updateUI(key, value);\n        }\n      });\n    });\n  }\n  private applyThemex(key: ThemexKey, value: ThemexValue): void {\n    localStorage.setItem(key, value);\n    document.documentElement.setAttribute(`data-${key}`, value);\n  }\n  private removeThemex(key: ThemexKey): void {\n    localStorage.removeItem(key);\n    document.documentElement.removeAttribute(`data-${key}`);\n  }\n  private updateUI(key: ThemexKey, value: ThemexValue): void {\n    document.querySelectorAll<HTMLInputElement>(`input[type=\"checkbox\"][data-themex-key=\"${key}\"]`)\n      .forEach(input => {\n        const inputValue = input.dataset.themexValue;\n        if (inputValue) {\n          input.checked = value === inputValue;\n        }\n      });\n      document.querySelectorAll<HTMLLabelElement>(`label[data-themex-key=\"${key}\"]`)\n      .forEach(label => {\n        const labelValue = label.dataset.themexValue;\n        label.querySelectorAll<HTMLInputElement>('input[type=\"checkbox\"]').forEach(input => {\n        if (labelValue) {\n          input.checked = value === labelValue;\n        }\n      });\n    });\n        document.querySelectorAll<HTMLButtonElement>(`button[data-themex-key=\"${key}\"][set]`)\n      .forEach(button => {\n        const buttonValue = button.dataset.themexValue;\n        const isSelected = buttonValue === value;\n        button.setAttribute('aria-current', isSelected.toString());\n      });\n    document.querySelectorAll<HTMLButtonElement>(`div[role=\"button\"][data-themex-key=\"${key}\"][set]`)\n      .forEach(button => {\n        const buttonValue = button.dataset.themexValue;\n        const isSelected = buttonValue === value;\n        button.setAttribute('aria-current', isSelected.toString());\n      });\n    document.querySelectorAll<HTMLButtonElement>(`button[data-themex-key=\"${key}\"][toggle]`)\n      .forEach(button => {\n        const buttonValue = button.dataset.themexValue;\n        const isSelected = buttonValue === value;\n        button.setAttribute('aria-pressed', isSelected.toString());\n      });\n    document.querySelectorAll<HTMLButtonElement>(`div[role=\"button\"][data-themex-key=\"${key}\"][toggle]`)\n      .forEach(button => {\n        const buttonValue = button.dataset.themexValue;\n        const isSelected = buttonValue === value;\n        button.setAttribute('aria-pressed', isSelected.toString());\n      });\n    // Update select elements\n    document.querySelectorAll<HTMLSelectElement>(`select[data-themex-key=\"${key}\"]`)\n      .forEach(select => {\n        select.value = value;\n        select.querySelectorAll(\"option\").forEach(option => {\n          option.removeAttribute(\"data-selected\");\n        });\n        const selectedOption = select.querySelector(`option[value=\"${value}\"]`);\n        if (selectedOption) {\n          selectedOption.setAttribute(\"data-selected\", \"true\");\n        }\n      });\n    document.querySelectorAll<HTMLInputElement>(`input[type=\"radio\"][data-themex-key=\"${key}\"]`)\n      .forEach(radio => {\n        const radioValue = radio.dataset.themexValue;\n        if (radioValue) {\n          radio.checked = radioValue === value;\n        }\n      });\n    document.querySelectorAll<HTMLInputElement>(`input[type=\"range\"][data-themex-key=\"${key}\"]`)\n      .forEach(range => {\n        range.value = value;\n      });\n  }\n}\nexport default Themex;"],
  "mappings": ";AAOA,IAAM,SAAN,MAAa;AAAA,EACH;AAAA,EACR,YAAY,SAA0B;AACpC,SAAK,UAAU;AACf,QAAI,SAAS,eAAe,WAAW;AACrC,eAAS,iBAAiB,oBAAoB,MAAM;AAClD,aAAK,iBAAiB;AACtB,aAAK,oBAAoB;AAAA,MAC3B,CAAC;AAAA,IACH,OAAO;AACL,WAAK,iBAAiB;AACtB,WAAK,oBAAoB;AAAA,IAC3B;AAAA,EACF;AAAA,EACQ,gBAAgB,KAAyC;AAC/D,UAAM,SAAS,KAAK,QAAQ,KAAK,SAAO,IAAI,QAAQ,GAAG;AACvD,WAAO,QAAQ;AAAA,EACjB;AAAA,EACQ,mBAAyB;AAC/B,SAAK,QAAQ,QAAQ,CAAC,EAAE,KAAK,SAAS,aAAa,MAAM;AACvD,YAAM,aAAa,aAAa,QAAQ,GAAG;AAC3C,cAAQ,IAAI,UAAU;AACtB,YAAM,QAAQ,cAAc;AAC5B,UAAI,OAAO;AACT,aAAK,YAAY,KAAK,KAAK;AAC3B,aAAK,SAAS,KAAK,KAAK;AAAA,MAC1B;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACQ,sBAA4B;AAClC,aAAS,iBAAmC,4DAA4D,EAAE,QAAQ,WAAS;AACzH,YAAM,iBAAiB,UAAU,CAAC,MAAM;AACtC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI,OAAO,OAAO;AAChB,cAAI,OAAO,SAAS;AAClB,iBAAK,YAAY,KAAK,KAAK;AAC3B,iBAAK,SAAS,KAAK,KAAK;AAAA,UAC1B,OAAO;AACL,kBAAM,eAAe,KAAK,gBAAgB,GAAG;AAC7C,gBAAI,cAAc;AAChB,mBAAK,YAAY,KAAK,YAAY;AAClC,mBAAK,SAAS,KAAK,YAAY;AAAA,YACjC,OAAO;AACL,mBAAK,aAAa,GAAG;AACrB,mBAAK,SAAS,KAAK,EAAE;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,aAAS,iBAAmC,wBAAwB,EAAE,QAAQ,WAAS;AACrF,YAAM,iBAAiB,UAAU,CAAC,MAAM;AACtC,cAAM,MAAM,MAAM,QAAQ;AAC1B,cAAM,QAAQ,MAAM,QAAQ;AAC5B,cAAM,iBAAmC,wBAAwB,EAAE,QAAQ,WAAS;AACpF,cAAI,OAAO,OAAO;AAChB,gBAAI,MAAM,SAAS;AACjB,mBAAK,YAAY,KAAK,KAAK;AAC3B,mBAAK,SAAS,KAAK,KAAK;AAAA,YAC1B,OAAO;AACL,oBAAM,eAAe,KAAK,gBAAgB,GAAG;AAC7C,kBAAI,cAAc;AAChB,qBAAK,YAAY,KAAK,YAAY;AAClC,qBAAK,SAAS,KAAK,YAAY;AAAA,cACjC,OAAO;AACL,qBAAK,aAAa,GAAG;AACrB,qBAAK,SAAS,KAAK,EAAE;AAAA,cACvB;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACD,CAAC;AAED,aAAS,iBAAoC,yBAAyB,EAAE,QAAQ,YAAU;AACxF,aAAO,iBAAiB,UAAU,CAAC,MAAM;AACvC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,cAAM,QAAQ,OAAO;AACrB,aAAK,YAAY,KAAK,KAAK;AAC3B,aAAK,SAAS,KAAK,KAAK;AAAA,MAC1B,CAAC;AAAA,IACH,CAAC;AAED,aAAS,iBAAoC,yBAAyB,EAAE,QAAQ,YAAU;AACxF,aAAO,iBAAiB,SAAS,CAAC,MAAM;AACtC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI,OAAO;AACT,eAAK,YAAY,KAAK,KAAK;AAC3B,eAAK,SAAS,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,aAAS,iBAAoC,qCAAqC,EAAE,QAAQ,YAAU;AACpG,aAAO,iBAAiB,SAAS,CAAC,MAAM;AACtC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI,OAAO;AACT,eAAK,YAAY,KAAK,KAAK;AAC3B,eAAK,SAAS,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,aAAS,iBAAkC,oBAAoB,EAAE,QAAQ,UAAQ;AAC/E,WAAK,iBAAiB,SAAS,CAAC,MAAM;AACpC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI,OAAO,OAAO;AAChB,eAAK,YAAY,KAAK,KAAK;AAC3B,eAAK,SAAS,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,aAAS,iBAAmC,sCAAsC,EAAE,QAAQ,WAAS;AACnG,YAAM,iBAAiB,UAAU,CAAC,MAAM;AACtC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,cAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAI,OAAO,WAAW,OAAO,OAAO;AAClC,eAAK,YAAY,KAAK,KAAK;AAC3B,eAAK,SAAS,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,aAAS,iBAAmC,sCAAsC,EAAE,QAAQ,WAAS;AACnG,YAAM,iBAAiB,UAAU,CAAC,MAAM;AACtC,cAAM,SAAS,EAAE;AACjB,cAAM,MAAM,OAAO,QAAQ;AAC3B,YAAI,KAAK;AACP,gBAAM,QAAQ,OAAO;AACrB,eAAK,YAAY,KAAK,KAAK;AAC3B,eAAK,SAAS,KAAK,KAAK;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACQ,YAAY,KAAgB,OAA0B;AAC5D,iBAAa,QAAQ,KAAK,KAAK;AAC/B,aAAS,gBAAgB,aAAa,QAAQ,GAAG,IAAI,KAAK;AAAA,EAC5D;AAAA,EACQ,aAAa,KAAsB;AACzC,iBAAa,WAAW,GAAG;AAC3B,aAAS,gBAAgB,gBAAgB,QAAQ,GAAG,EAAE;AAAA,EACxD;AAAA,EACQ,SAAS,KAAgB,OAA0B;AACzD,aAAS,iBAAmC,2CAA2C,GAAG,IAAI,EAC3F,QAAQ,WAAS;AAChB,YAAM,aAAa,MAAM,QAAQ;AACjC,UAAI,YAAY;AACd,cAAM,UAAU,UAAU;AAAA,MAC5B;AAAA,IACF,CAAC;AACD,aAAS,iBAAmC,0BAA0B,GAAG,IAAI,EAC5E,QAAQ,WAAS;AAChB,YAAM,aAAa,MAAM,QAAQ;AACjC,YAAM,iBAAmC,wBAAwB,EAAE,QAAQ,WAAS;AACpF,YAAI,YAAY;AACd,gBAAM,UAAU,UAAU;AAAA,QAC5B;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACG,aAAS,iBAAoC,2BAA2B,GAAG,SAAS,EACrF,QAAQ,YAAU;AACjB,YAAM,cAAc,OAAO,QAAQ;AACnC,YAAM,aAAa,gBAAgB;AACnC,aAAO,aAAa,gBAAgB,WAAW,SAAS,CAAC;AAAA,IAC3D,CAAC;AACH,aAAS,iBAAoC,uCAAuC,GAAG,SAAS,EAC7F,QAAQ,YAAU;AACjB,YAAM,cAAc,OAAO,QAAQ;AACnC,YAAM,aAAa,gBAAgB;AACnC,aAAO,aAAa,gBAAgB,WAAW,SAAS,CAAC;AAAA,IAC3D,CAAC;AACH,aAAS,iBAAoC,2BAA2B,GAAG,YAAY,EACpF,QAAQ,YAAU;AACjB,YAAM,cAAc,OAAO,QAAQ;AACnC,YAAM,aAAa,gBAAgB;AACnC,aAAO,aAAa,gBAAgB,WAAW,SAAS,CAAC;AAAA,IAC3D,CAAC;AACH,aAAS,iBAAoC,uCAAuC,GAAG,YAAY,EAChG,QAAQ,YAAU;AACjB,YAAM,cAAc,OAAO,QAAQ;AACnC,YAAM,aAAa,gBAAgB;AACnC,aAAO,aAAa,gBAAgB,WAAW,SAAS,CAAC;AAAA,IAC3D,CAAC;AAEH,aAAS,iBAAoC,2BAA2B,GAAG,IAAI,EAC5E,QAAQ,YAAU;AACjB,aAAO,QAAQ;AACf,aAAO,iBAAiB,QAAQ,EAAE,QAAQ,YAAU;AAClD,eAAO,gBAAgB,eAAe;AAAA,MACxC,CAAC;AACD,YAAM,iBAAiB,OAAO,cAAc,iBAAiB,KAAK,IAAI;AACtE,UAAI,gBAAgB;AAClB,uBAAe,aAAa,iBAAiB,MAAM;AAAA,MACrD;AAAA,IACF,CAAC;AACH,aAAS,iBAAmC,wCAAwC,GAAG,IAAI,EACxF,QAAQ,WAAS;AAChB,YAAM,aAAa,MAAM,QAAQ;AACjC,UAAI,YAAY;AACd,cAAM,UAAU,eAAe;AAAA,MACjC;AAAA,IACF,CAAC;AACH,aAAS,iBAAmC,wCAAwC,GAAG,IAAI,EACxF,QAAQ,WAAS;AAChB,YAAM,QAAQ;AAAA,IAChB,CAAC;AAAA,EACL;AACF;AACA,IAAO,iBAAQ;",
  "names": []
}
